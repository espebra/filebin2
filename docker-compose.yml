version: "3"
services:
  s3:
    image: "minio/minio"
    hostname: "storage"
    restart: "no"
    environment:
      - MINIO_ROOT_USER=s3accesskey
      - MINIO_ROOT_PASSWORD=s3secretkey
    expose:
      - "9000"
      - "9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: [ "minio", "server", "/data", "--console-address", ":9001" ]
    networks:
      - local

  db:
    image: "postgres:17-alpine"
    hostname: "db"
    restart: "no"
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=changeme
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql:delegated
    networks:
      - local

  app:
    build: .
    restart: "no"
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=db
      - DATABASE_USERNAME=username
      - DATABASE_PASSWORD=changeme
      - S3_ENDPOINT=storage:9000
      - S3_REGION=us-east-1
      - S3_BUCKET=filebin
      - S3_ACCESS_KEY=s3accesskey
      - S3_SECRET_KEY=s3secretkey
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=changeme
      - METRICS_USERNAME=foo
      - METRICS_PASSWORD=bar
      - METRICS_AUTH=basic
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - .:/app:delegated
    depends_on:
      - db
      - s3
    networks:
      - local
    entrypoint: [ "./wait-for-s3.sh", "make", "run" ]
  #varnish:
  #  image: "varnish:stable"
  #  restart: "no"
  #  expose:
  #    - "6081"
  #  ports:
  #    - "6081:80"
  #  volumes:
  #    - ./etc/varnish:/etc/varnish:delegated
  #  depends_on:
  #    - app

networks:
  local: null
